generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  name      String
  userName  String    @unique
  email     String    @unique
  picture   String?
  bio       String?
  Comment   Comment[]
  following Follows[] @relation("follower")
  followers Follows[] @relation("following")
  Like      Like[]
  Post      Post[]
}

model Post {
  id        String    @id @unique @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  draft     Boolean   @default(false)
  content   String?
  markdown  Boolean   @default(false)
  userId    String
  Picture   Picture[]
  Comment   Comment[]
  Like      Like[]
  author    User      @relation(fields: [userId], references: [id])
}

model Picture {
  id      String @id @default(cuid())
  postsId String
  post    Post   @relation(fields: [postsId], references: [id])
  url     String
}

model Comment {
  id        String    @id @unique @default(cuid())
  text      String
  createdAt DateTime? @default(now())
  postsId   String
  userId    String
  parentId  String?
  parent    Comment?  @relation("Comment_Children", fields: [parentId], references: [id])
  Children  Comment[] @relation("Comment_Children")
  post      Post      @relation(fields: [postsId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model Like {
  id      String @id @unique @default(cuid())
  postsId String
  userId  String
  post    Post   @relation(fields: [postsId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
}

model Follows {
  followerId  String
  followingId String
  follower    User   @relation("follower", fields: [followerId], references: [id])
  following   User   @relation("following", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model Totp {
  id        String    @id @default(uuid())
  hash      String    @unique
  active    Boolean   @default(true)
  attempts  Int       @default(0)
  expiresAt DateTime? @default(now())
}
